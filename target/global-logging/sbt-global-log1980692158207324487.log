[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 18.0.1.1)
[debug]             Load.loadUnit: plugins took 15.006499ms
[debug]             Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\PolyakovMA\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\PolyakovMA\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.6825 ms
[debug]                 Load.resolveProject(global-plugins) took 0.8901ms
[debug]               Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\PolyakovMA\.sbt\1.0\plugins, plugins: List(<none>))) took 1.8249ms
[debug] [Loading] Done in C:\Users\PolyakovMA\.sbt\1.0\plugins, returning: (global-plugins)
[debug]             Load.loadUnit: loadedProjectsRaw took 2.3976ms
[debug]             Load.loadUnit: cleanEvalClasses took 0.0093ms
[debug]           Load.loadUnit(file:/C:/Users/PolyakovMA/.sbt/1.0/plugins/, ...) took 17.866799ms
[debug]         Load.apply: load took 18.734599ms
[debug]         Load.apply: resolveProjects took 0.085299ms
[debug]         Load.apply: finalTransforms took 3.7462ms
[debug]         Load.apply: config.delegates took 0.1688ms
[debug]         Load.apply: Def.make(settings)... took 26.9781ms
[debug]         Load.apply: structureIndex took 9.3517ms
[debug]         Load.apply: mkStreams took 0.0034ms
[info] loading global plugins from C:\Users\PolyakovMA\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug]       Load.defaultLoad until apply took 738.8713ms
[debug]                 Load.loadUnit: plugins took 124.1621ms
[debug]                 Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\PolyakovMA\Desktop\project\code\project
[debug]                   Load.loadUnit: mkEval took 0.5904ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\PolyakovMA\Desktop\project\code\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.6939 ms
[info] loading settings for project code-build from plugins.sbt,idea.sbt ...
[debug]                     Load.resolveProject(code-build) took 9.1367ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id code-build, base: C:\Users\PolyakovMA\Desktop\project\code\project, plugins: List(<none>))) took 25.104ms
[debug] [Loading] Done in C:\Users\PolyakovMA\Desktop\project\code\project, returning: (code-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 184.7128ms
[debug]                 Load.loadUnit: cleanEvalClasses took 6.889301ms
[debug]               Load.loadUnit(file:/C:/Users/PolyakovMA/Desktop/project/code/project/, ...) took 320.2972ms
[debug]             Load.apply: load took 322.2723ms
[debug]             Load.apply: resolveProjects took 0.0965ms
[debug]             Load.apply: finalTransforms took 10.8277ms
[debug]             Load.apply: config.delegates took 0.2658ms
[debug]             Load.apply: Def.make(settings)... took 102.122499ms
[debug]             Load.apply: structureIndex took 23.623199ms
[debug]             Load.apply: mkStreams took 0.0038ms
[info] loading project definition from C:\Users\PolyakovMA\Desktop\project\code\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 768.482601ms
[debug]           Load.loadUnit: defsScala took 0.003999ms
[debug] [Loading] Scanning directory C:\Users\PolyakovMA\Desktop\project\code
[debug]             Load.loadUnit: mkEval took 3.609099ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.144 ms
[info] loading settings for project root from build.sbt ...
[debug]               Load.resolveProject(root) took 39.2915ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\PolyakovMA\Desktop\project\code, plugins: List(<none>))) took 41.924401ms
[debug] [Loading] Done in C:\Users\PolyakovMA\Desktop\project\code, returning: (root)
[debug]           Load.loadUnit: loadedProjectsRaw took 645.6542ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.1382ms
[debug]         Load.loadUnit(file:/C:/Users/PolyakovMA/Desktop/project/code/, ...) took 1428.9034ms
[debug]       Load.apply: load took 1430.1907ms
[debug]       Load.apply: resolveProjects took 3.1264ms
[debug]       Load.apply: finalTransforms took 15.265201ms
[debug]       Load.apply: config.delegates took 0.2851ms
[debug]       Load.apply: Def.make(settings)... took 62.0312ms
[debug]       Load.apply: structureIndex took 11.162701ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] set current project to ProjectJobs (in build file:/C:/Users/PolyakovMA/Desktop/project/code/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
